{"componentChunkName":"component---node-modules-sh-4-hids-gatsby-theme-open-sourcerer-src-templates-post-js","path":"/blog/2021/09/22/how-to-generate-api-key-and-secret-to-protect-api/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://v2021.shahid.pro","blogPath":"blog","baseEditUrl":"https://github.com/sh4hids/2021.shahid.pro/edit/main/contents/blog","utterancesCommentRepo":"sh4hids/shahid.pro-comments","author":{"fullName":"Shahidul Islam Majumder"}}},"markdownRemark":{"html":"<p>I have used a lot of third-party APIs for the last four years. Most of them provided keys and secrets (API key/Client ID, API/Client secret) to access the API. I was also planning to develop some services where I would provide APIs. So, I was wondering how to generate API keys and API secrets for my services.</p>\n<p>I started researching and read a lot of articles and StackOverflow questions regarding this topic. I found out that there are some common rules. I will try to summarize what I have learned about generating API keys and secrets in this post.</p>\n<h2 id=\"api-key-or-client-id\" style=\"position:relative;\"><a href=\"#api-key-or-client-id\" aria-label=\"api key or client id permalink\" class=\"header-anchor-icon before\"><svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 162.656 162.656\" xml:space=\"preserve\" width=\"0.6em\" height=\"0.6em\" fill=\"#21AAE2\" stroke=\"#21AAE2\" stroke-width=\"0\"><path d=\"M151.764,10.894c-14.522-14.522-38.152-14.525-52.676-0.008l0.003,0.003L76.112,33.872l10.607,10.605l22.983-22.988 l-0.002-0.002c8.678-8.663,22.785-8.658,31.457,0.014c8.673,8.672,8.672,22.786,0,31.461l-34.486,34.484 c-4.201,4.202-9.787,6.516-15.729,6.516c-5.942,0-11.529-2.314-15.73-6.516L64.605,98.052c7.035,7.035,16.389,10.91,26.338,10.91 c9.949,0,19.303-3.875,26.335-10.91l34.487-34.484C166.284,49.043,166.284,25.413,151.764,10.894z\"></path> <path d=\"M52.96,141.162L52.96,141.162c-8.675,8.67-22.788,8.668-31.461-0.005c-8.673-8.675-8.673-22.791-0.001-31.465L55.98,75.21 c8.675-8.674,22.789-8.674,31.462,0L98.05,64.604c-14.524-14.523-38.154-14.524-52.676,0L10.89,99.086 c-14.519,14.523-14.519,38.154,0.001,52.678c7.263,7.262,16.801,10.893,26.341,10.892c9.536,0,19.074-3.629,26.333-10.887 l0.002-0.001l22.984-22.99l-10.608-10.606L52.96,141.162z\"></path> </svg></a>API Key or Client ID</h2>\n<p>An API key or Client ID is a unique key to identify a user. Like a username or email, it must be unique. It should be unguessable too. We don't have to encrypt it. We can generate an API key by using the <code class=\"language-text\">crypto</code> package from Node.js. You can use the following code to generate an API key.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> randomBytes <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'crypto'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">generateKey</span><span class=\"token punctuation\">(</span>size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> format <span class=\"token operator\">=</span> <span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">randomBytes</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">generateKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// will generate something like:</span>\n<span class=\"token comment\">// 0NY4IrzHgLnRZUCWpxSnXLpn+Qjb1YfEj0UmnQaJiTw=</span></code></pre></div>\n<h2 id=\"api-secret-or-client-secret\" style=\"position:relative;\"><a href=\"#api-secret-or-client-secret\" aria-label=\"api secret or client secret permalink\" class=\"header-anchor-icon before\"><svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 162.656 162.656\" xml:space=\"preserve\" width=\"0.6em\" height=\"0.6em\" fill=\"#21AAE2\" stroke=\"#21AAE2\" stroke-width=\"0\"><path d=\"M151.764,10.894c-14.522-14.522-38.152-14.525-52.676-0.008l0.003,0.003L76.112,33.872l10.607,10.605l22.983-22.988 l-0.002-0.002c8.678-8.663,22.785-8.658,31.457,0.014c8.673,8.672,8.672,22.786,0,31.461l-34.486,34.484 c-4.201,4.202-9.787,6.516-15.729,6.516c-5.942,0-11.529-2.314-15.73-6.516L64.605,98.052c7.035,7.035,16.389,10.91,26.338,10.91 c9.949,0,19.303-3.875,26.335-10.91l34.487-34.484C166.284,49.043,166.284,25.413,151.764,10.894z\"></path> <path d=\"M52.96,141.162L52.96,141.162c-8.675,8.67-22.788,8.668-31.461-0.005c-8.673-8.675-8.673-22.791-0.001-31.465L55.98,75.21 c8.675-8.674,22.789-8.674,31.462,0L98.05,64.604c-14.524-14.523-38.154-14.524-52.676,0L10.89,99.086 c-14.519,14.523-14.519,38.154,0.001,52.678c7.263,7.262,16.801,10.893,26.341,10.892c9.536,0,19.074-3.629,26.333-10.887 l0.002-0.001l22.984-22.99l-10.608-10.606L52.96,141.162z\"></path> </svg></a>API Secret or Client Secret</h2>\n<p>An API/Client secret is a secure key to provide secure access to an API. It must be unique and unguessable. We must store it in hashed form because it's just like a password. It is a good practice to use different secret keys for different scopes in APIs. For example, we can use a key to <code class=\"language-text\">Create</code> and <code class=\"language-text\">Update</code> articles and another key to <code class=\"language-text\">Read</code> user list and details.</p>\n<p>We can generate a random unique key using our previous <code class=\"language-text\">generateKey</code> method and hash the result using <code class=\"language-text\">scryptSync</code> from the <code class=\"language-text\">crypto</code> package. We will send the unhashed key to users and asked them to store the key safely. One of the shortcomings of this approach is that the user won't see the key again if the user forgets the key. You can use the following code to generate a hashed version of the key.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> scryptSync<span class=\"token punctuation\">,</span> randomBytes<span class=\"token punctuation\">,</span> timingSafeEqual <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'crypto'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">generateSecretHash</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> salt <span class=\"token operator\">=</span> <span class=\"token function\">randomBytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hex'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> <span class=\"token function\">scryptSync</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> Buffer<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hex'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>salt<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// used the previous function</span>\n<span class=\"token keyword\">const</span> key <span class=\"token operator\">=</span> <span class=\"token function\">generateKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// send to user: Jj0fmQUis7xKJ6oge4r1fN4em7xJ+hILrgubKlG6PLA=</span>\n<span class=\"token keyword\">const</span> secretHash <span class=\"token operator\">=</span> <span class=\"token function\">generateSecretHash</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// save in db: c10c7e79fc496144ee245d9dcbe52d9d3910c2a514af1cfe8afda9ea655815efed5bd2a793b31bf923fe47d212bab7896cd527c720849678077e34cdd6fec0a2.2f717b397644fdcc</span></code></pre></div>\n<p>We can use the following code to compare and validate an API secret.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">compareKeys</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">storedKey<span class=\"token punctuation\">,</span> suppliedKey</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>hashedPassword<span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> storedKey<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> <span class=\"token function\">scryptSync</span><span class=\"token punctuation\">(</span>suppliedKey<span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> Buffer<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">timingSafeEqual</span><span class=\"token punctuation\">(</span>Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>hashedPassword<span class=\"token punctuation\">,</span> <span class=\"token string\">'hex'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I hope you've got a general guideline about generating API keys and secrets. To know more about this, you can follow the following links:</p>\n<p>Resources:</p>\n<ul>\n<li><a href=\"https://www.oauth.com/oauth2-servers/client-registration/client-id-secret/\">The Client ID and Secret</a></li>\n<li><a href=\"https://stackoverflow.com/questions/55009503/how-services-generate-and-use-public-and-secret-api-keys\">How services generate and use public and secret API keys?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/14412132/whats-the-best-approach-for-generating-a-new-api-key\">What's the best approach for generating a new API key?</a></li>\n<li><a href=\"https://security.stackexchange.com/questions/180345/do-i-need-to-hash-or-encrypt-api-keys-before-storing-them-in-a-database\">Do I need to hash or encrypt API keys before storing them in a database?</a></li>\n<li><a href=\"https://security.stackexchange.com/questions/180367/need-advices-on-api-key-secret-generation\">Need advices on API key &#x26; secret generation?</a></li>\n<li><a href=\"https://www.freecodecamp.org/news/best-practices-for-building-api-keys-97c26eabfea9/\">Best practices for building secure API Keys</a></li>\n<li><a href=\"https://nodejs.org/api/crypto.html\">Crypto</a></li>\n</ul>","timeToRead":3,"excerpt":"I have used a lot of third-party APIs for the last four years. Most of them provided keys and secrets (API key/Client ID, API/Client secret…","frontmatter":{"title":"How To Generate API Key And Secret To Protect API","publishedAt":"2021-09-22","tags":["API","javascript"],"slug":"how-to-generate-api-key-and-secret-to-protect-api"},"fields":{"slug":"/2021/09/22/how-to-generate-api-key-and-secret-to-protect-api/"}}},"pageContext":{"slug":"/2021/09/22/how-to-generate-api-key-and-secret-to-protect-api/","prev":{"frontmatter":{"tags":["javascript"],"title":"JavaScript Object Key Existence Check (on any level)"},"fields":{"slug":"/2019/07/18/javascript-object-key-existence-check/"}},"next":{"frontmatter":{"tags":["aws","s3"],"title":"Completely Delete Objects From Versioned S3 Bucket"},"fields":{"slug":"/2024/01/07/completely-delete-objects-from-versioned-s-3-bucket/"}}}},"staticQueryHashes":["1066969672","1349029593","2767800352","3803536959","3825412538","3941996707","4259536812"]}