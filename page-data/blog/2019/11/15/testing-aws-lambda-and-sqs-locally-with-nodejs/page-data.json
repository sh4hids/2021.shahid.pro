{"componentChunkName":"component---node-modules-sh-4-hids-gatsby-theme-open-sourcerer-src-templates-post-js","path":"/blog/2019/11/15/testing-aws-lambda-and-sqs-locally-with-nodejs/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://v2021.shahid.pro","blogPath":"blog","baseEditUrl":"https://github.com/sh4hids/2021.shahid.pro/edit/main/contents/blog","utterancesCommentRepo":"sh4hids/shahid.pro-comments","author":{"fullName":"Shahidul Islam Majumder"}}},"markdownRemark":{"html":"<p>I suppose both of your Lambda function and SQS messages are ready, and AWS Lambda and SQS in <code class=\"language-text\">localstack</code> are up and running. We need the SQS queue URL and you can find all of the URLs by running this command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws --endpoint-url<span class=\"token operator\">=</span>http://localhost:4576 sqs list-queues</code></pre></div>\n<p>If you haven't create any SQS queue yet, create one using the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws --endpoint-url<span class=\"token operator\">=</span>http://localhost:4576 sqs create-queue --queue-name test-sqs</code></pre></div>\n<p>Now create a directory and open it in a terminal window. We need to initialize this directory by running <code class=\"language-text\">npm init -y</code>. We need two npm packages to test our SQS and Lambda function locally: <code class=\"language-text\">lambda-local</code> and <code class=\"language-text\">sqs-consumer</code>. Install these packages by running the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-S</span> lambda-local sqs-consumer</code></pre></div>\n<p>Create a file named <code class=\"language-text\">index.js</code> and paste the following code in it. You have to change the configuration according to your settings.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> lambdaLocal <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lambda-local'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Consumer <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sqs-consumer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> Consumer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">queueUrl</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:4576/queue/test-sqs'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">handleMessage</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> jsonPayload <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">Records</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> message<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">messageAttributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">messageType</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token literal-property property\">stringValue</span><span class=\"token operator\">:</span> message<span class=\"token punctuation\">.</span>MessageAttributes<span class=\"token punctuation\">.</span>messageType<span class=\"token punctuation\">.</span>StringValue<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    lambdaLocal\n      <span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> jsonPayload<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">lambdaPath</span><span class=\"token operator\">:</span> <span class=\"token string\">'./my-lambda-function/index.js'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//your lambda function path</span>\n        <span class=\"token literal-property property\">timeoutMs</span><span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">envfile</span><span class=\"token operator\">:</span> <span class=\"token string\">'./my-lambda-function/.env'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//your lambda function env</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">done</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>done<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">messageAttributeNames</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'All'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'processing_error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Finally, add a <code class=\"language-text\">start</code> script in your <code class=\"language-text\">package.json</code> and run <code class=\"language-text\">npm start</code> to start the SQS consumer. If you trigger your SQS send message call now, you will see that your lambda function has been executed. You can check a complete setup in <a href=\"https://github.com/sh4hids/test-sqs-and-lambda-locally\">this git repo</a>.</p>\n<p>Please let me know if you faced any problem or not. Thanks for reading this short tutorial.</p>","timeToRead":2,"excerpt":"I suppose both of your Lambda function and SQS messages are ready, and AWS Lambda and SQS in  are up and running. We need the SQS queue URL…","frontmatter":{"title":"Testing AWS Lambda and SQS locally with Node.js","publishedAt":"2019-11-15T00:00:00.000Z","tags":["node","aws","aws lambda","aws sqs"],"slug":"testing-aws-lambda-and-sqs-locally-with-nodejs"},"fields":{"slug":"/2019/11/15/testing-aws-lambda-and-sqs-locally-with-nodejs/"}}},"pageContext":{"slug":"/2019/11/15/testing-aws-lambda-and-sqs-locally-with-nodejs/","prev":{"frontmatter":{"tags":["javascript","prettier","eslint"],"title":"Setting Up ESLint And Prettier In A Node Project"},"fields":{"slug":"/2021/10/29/setting-up-eslint-and-prettier-in-a-node-project/"}},"next":{"frontmatter":{"tags":["electronjs","react","vite","electron builder"],"title":"Release Electron App To GitHub Using Semantic Release And Electron Builder"},"fields":{"slug":"/2023/02/20/release-electron-app-to-github-using-semantic-release-and-electron-builder/"}}}},"staticQueryHashes":["1066969672","1349029593","2767800352","3803536959","3825412538","3941996707","4259536812"]}